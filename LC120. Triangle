class Solution {
public:
//MEMO
int sum(int i,int j,vector<vector<int>>& t,vector<vector<int>>&dp){
    int n=t.size();
    if(i==n-1){
        return t[n-1][j];
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    int rows=t[i][j]+sum(i+1,j,t,dp);
    int ds=t[i][j]+sum(i+1,j+1,t,dp);
    return dp[i][j]=min(rows,ds);
}
    int minimumTotal(vector<vector<int>>& triangle) {      
    int n=triangle.size();
        vector<vector<int>>dp(n,vector<int>(n,-1));
      for(int j=0;j<n;j++){
        dp[n-1][j]=triangle[n-1][j];
      }
      for(int i=n-2;i>=0;i--){
        for(int j=i;j>=0;j--){
            dp[i][j]=triangle[i][j]+min(dp[i+1][j],dp[i+1][j+1]);
        }
      }
      return dp[0][0];
    }
};
