class Solution {
public:
void combination(int indx,vector<int>&candidates, int target,vector<vector<int>>&ans, vector<int>&curr){
    int n=candidates.size();
    if(indx==n || target<0){
        return;
    }
     if(target==0){
        ans.push_back(curr);
        return;
     }
    if(candidates[indx]<=target){
        curr.push_back(candidates[indx]);
        combination(indx,candidates,target-candidates[indx],ans,curr);
        curr.pop_back();
    }
     combination(indx+1,candidates,target,ans,curr);
}
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int>curr;
        vector<vector<int>>ans;
        combination(0,candidates,target,ans,curr);
        return ans;
    }
};
